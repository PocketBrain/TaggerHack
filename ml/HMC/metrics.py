import torch


def calculate_iou(y_true, y_pred, epsilon=1e-6):
    """
    Вычисляет среднее значение индекса пересечения и объединения (IoU) для предсказанных и истинных меток.

    Индекс пересечения и объединения (IoU) — это метрика, которая используется для оценки
    точности предсказаний сегментации. IoU рассчитывается как отношение пересечения предсказанных
    и истинных меток к их объединению.

    Parameters
    ----------
    y_true : torch.Tensor
        Tensor с истинными метками (binary labels), размерности [batch_size, num_classes].
    y_pred : torch.Tensor
        Tensor с предсказанными метками (binary predictions), размерности [batch_size, num_classes].
    epsilon : float, optional
        Малое число, добавляемое для избежания деления на ноль (по умолчанию 1e-6).

    Returns
    -------
    float
        Среднее значение IoU по всем примерам в батче.

    Notes
    -----
    - IoU для класса считается равным 1.0, если как предсказания, так и истинные метки полностью равны нулю.
    - IoU вычисляется для каждого элемента в батче отдельно, затем возвращается среднее значение.
    """
    # Вычисление пересечения: элементы, где истинные метки и предсказания оба равны 1
    intersection = (y_true * y_pred).sum(dim=1)

    # Вычисление объединения: элементы, где хотя бы одно из значений равно 1
    union = ((y_true + y_pred) >= 1).sum(dim=1)

    # Обработка случая, когда как y_true, так и y_pred состоят только из нулей
    iou = torch.zeros_like(intersection)

    # Рассчитываем IoU только для тех элементов, где есть ненулевое объединение
    valid = union > 0
    iou[valid] = intersection[valid] / (union[valid] + epsilon)

    # Если и истинные, и предсказанные метки полностью равны нулю, IoU устанавливается в 1.0
    iou[~valid] = 1.0

    # Возвращаем среднее значение IoU для всего батча
    return iou.mean().item()
